# ============================================
# Silent Risk Worker - Environment Configuration
# ============================================

# ============ SERVICE ============

APP_NAME=Silent Risk Worker
APP_VERSION=1.0.0
ENVIRONMENT=development
DEBUG=true
LOG_LEVEL=INFO

# ============ KAFKA ============

KAFKA_BOOTSTRAP_SERVERS=localhost:9092
KAFKA_CONSUMER_GROUP=silent-risk-workers
KAFKA_TOPIC_RISK_REQUESTS=risk-analysis-requests
KAFKA_TOPIC_RISK_RESULTS=risk-analysis-results
KAFKA_TOPIC_STRATEGY_REQUESTS=strategy-validation-requests
KAFKA_TOPIC_STRATEGY_RESULTS=strategy-validation-results

# ============ REDIS ============

REDIS_URL=redis://localhost:6379/0
REDIS_PUBSUB_CHANNEL=task_status_updates
ANALYSIS_CACHE_TTL=1800

# ============ BLOCKCHAIN (PRIMARY: ON-CHAIN RPC) ============

# Required: Ethereum RPC for on-chain queries
# Supports: Infura, Alchemy, or any Ethereum RPC provider
ETH_RPC_URL=https://sepolia.infura.io/v3/YOUR_PROJECT_ID
ETH_CHAIN_ID=11155111

# Optional: Etherscan API (ONLY used as fallback when RPC insufficient)
# Most analysis done via direct RPC - Etherscan rarely needed
# Leave empty to disable Etherscan fallback
ETHERSCAN_API_KEY=

# ============ SMART CONTRACTS ============

# RiskScoreVault contract address (deployed on Sepolia)
VAULT_CONTRACT_ADDRESS=0x...

# Worker wallet private key (must be authorized updater in vault)
# SECURITY: Keep this secret! Never commit to git!
WORKER_PRIVATE_KEY=0x...

# Wait for transaction confirmation (true for production)
WAIT_FOR_CONFIRMATION=true

# ============ ANALYSIS PARAMETERS ============

# Days of blockchain history to analyze
FEATURE_WINDOW_DAYS=90

# Minimum transactions required for full analysis
MIN_TRANSACTIONS_REQUIRED=5

# Days for volatility calculation
VOLATILITY_WINDOW=30

# ============================================
# ON-CHAIN INDEXING STRATEGY
# ============================================
# Primary Methods (No API rate limits):
# - eth_getTransactionCount (nonce)
# - eth_getBalance (current balance)  
# - eth_getLogs (token transfers, events)
# - eth_getBlock (transaction details)
# - Binary search for first transaction
#
# Etherscan API (Optional, rarely used):
# - Only when RPC data insufficient
# - Not required for core functionality
# ============================================

# ============================================
# QUICK START
# ============================================
# 1. Copy: cp env.example .env
# 2. Update ETH_RPC_URL with your Infura/Alchemy key
# 3. (Optional) Add ETHERSCAN_API_KEY for fallback
# 4. Start dependencies:
#    docker-compose up -d kafka redis
# 5. Start worker:
#    make dev
# ============================================
